package com.revature.web;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import com.revature.model.LoginForm;
import com.revature.util.Json;

public class DispatcherServlet extends HttpServlet {

	private static final long serialVersionUID = 1L;
	private final Logger logger = LogManager.getLogger(getClass());

	public DispatcherServlet() {
	}
	// /api/login
	// /api/reimbursements
	// /api/pokemon?type=shield
	
	
	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		// We need to configure the different options such that our application
		// can RESPOND to any client, as long as it's a valid request to our resource
		
		LoginForm form = (LoginForm) Json.read(req.getInputStream(), LoginForm.class);
		logger.info("Found Login Form: {}", form);
		
		// A way to create JSON strings without a predefined model class
		Map<String, String> demoJson = new HashMap<>();
		demoJson.put("message", "Hello, world!");
		demoJson.put("weather", "ehh, it's alright outside");
		
		// Write this on the fly POJO to the response body
		resp.getOutputStream().write(Json.write(demoJson));
	}
}













